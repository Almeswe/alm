import "test.alm";

func run_primitive_integral_array_test() : void
{
	println("INTEGRAL ARRAY TEST [0,1,2,3]\n");
	integer[] arr_int32 = integer(4);
	arr_int32[0] = 0;
	arr_int32[1] = 1;
	arr_int32[2] = 2;
	arr_int32[3] = 3;

	println("GET FROM INTEGRAL ARRAY TEST");
	test_case(arr_int32[0], 0, 1);
	test_case(arr_int32[1], 1, 2);
	test_case(arr_int32[2], 2, 3);
	test_case(arr_int32[3], 3, 4);
	println("");

	println("RESET ELEMENTS OF INTEGRAL ARRAY TEST [-2,3,5,10]");
	arr_int32[0] = -2;
	arr_int32[1] = 3;
	arr_int32[2] = 5;
	arr_int32[3] = 10;
	test_case(arr_int32[0], -2, 1);
	test_case(arr_int32[1], 3, 2);
	test_case(arr_int32[2], 5, 3);
	test_case(arr_int32[3], 10, 4);
	println("");
}
func run_primitive_real_array_test() : void
{
	println("REAL ARRAY TEST [0.12, 1.123, 2.1, 3.445]\n");
	float[] arr_single = float(4);
	arr_single[0] = 0.12;
	arr_single[1] = 1.123;
	arr_single[2] = 2.1;
	arr_single[3] = 3.445;

	println("GET FROM REAL ARRAY TEST");
	test_case(arr_single[0], 0.12, 1);
	test_case(arr_single[1], 1.123, 2);
	test_case(arr_single[2], 2.1, 3);
	test_case(arr_single[3], 3.445, 4);
	println("");

	println("RESET ELEMENTS OF REAL ARRAY TEST [-2.22, 3.234, 5.02, 10.111]");
	arr_single[0] = -2.22;
	arr_single[1] = 3.234;
	arr_single[2] = 5.02;
	arr_single[3] = 10.111;
	test_case(arr_single[0], -2.22, 1);
	test_case(arr_single[1], 3.234, 2);
	test_case(arr_single[2], 5.02, 3);
	test_case(arr_single[3], 10.111, 4);
	println("");
}
func run_string_test() : void
{
	println("STRING TEST \"ABCD\"\n");
	string str = "ABCD";

	println("GET FROM STRING TEST");
	test_case(str[0], 'A', 1);
	test_case(str[1], 'B', 2);
	test_case(str[2], 'C', 3);
	test_case(str[3], 'D', 4);
	println("");
}
func run_primitive_boolean_array_test() : void
{
	println("BOOLEAN ARRAY TEST [true,false,false,true]\n");
	boolean[] arr_bool = boolean(4);
	arr_bool[0] = true;
	arr_bool[1] = false;
	arr_bool[2] = false;
	arr_bool[3] = true;

	println("GET FROM BOOLEAN ARRAY TEST");
	test_case(arr_bool[0], true, 1);
	test_case(arr_bool[1], false, 2);
	test_case(arr_bool[2], false, 3);
	test_case(arr_bool[3], true, 4);
	println("");

	println("RESET ELEMENTS OF BOOLEAN ARRAY TEST [false,true,false,true]");
	arr_bool[0] = false;
	arr_bool[1] = true;
	arr_bool[2] = false;
	arr_bool[3] = true;
	test_case(arr_bool[0], false, 1);
	test_case(arr_bool[1], true, 2);
	test_case(arr_bool[2], false, 3);
	test_case(arr_bool[3], true, 4);
	println("");
}
func run_primitive_string_array_test() : void
{
	println("STRING ARRAY TEST [\"abc\",\"qwe\",\"rty\",\"uio\"]\n");
	string[] arr_str = string(4);
	arr_str[0] = "abc";
	arr_str[1] = "qwe";
	arr_str[2] = "rty";
	arr_str[3] = "uio";

	println("GET FROM STRING ARRAY TEST");
	test_case(arr_str[0], "abc", 1);
	test_case(arr_str[1], "qwe", 2);
	test_case(arr_str[2], "rty", 3);
	test_case(arr_str[3], "uio", 4);
	println("");

	println("RESET ELEMENTS OF STRING ARRAY TEST [\"zxc\",\"vbn\",\"hjk\",\"sdf\"]");
	arr_str[0] = "zxc";
	arr_str[1] = "vbn";
	arr_str[2] = "hjk";
	arr_str[3] = "sdf";
	test_case(arr_str[0], "zxc", 1);
	test_case(arr_str[1], "vbn", 2);
	test_case(arr_str[2], "hjk", 3);
	test_case(arr_str[3], "sdf", 4);
	println("");
}

func run_multiple_dimension_integral_array_test() : void
{
	println("                             [4,5,2]");
	println("INTEGRAL MULT-DIM ARRAY TEST [0,1,2]");
	println("                             [3,8,4]\n");

	integer[,] arr_int32 = integer(3,3);
	arr_int32[0,0] = 4;	arr_int32[1, 0] = 0; arr_int32[2, 0] = 3;
	arr_int32[0,1] = 5;	arr_int32[1, 1] = 1; arr_int32[2, 1] = 8;
	arr_int32[0,2] = 2;	arr_int32[1, 2] = 2; arr_int32[2, 2] = 4;

	println("GET FROM INTEGRAL MULT-DIM ARRAY TEST");
	test_case(arr_int32[0,0], 4, 1);
	test_case(arr_int32[1,1], 1, 2);
	test_case(arr_int32[2,2], 4, 3);
	println("");

	println("                                               [9,5,2]");
	println("RESET ELEMENTS OF INTEGRAL MULT-DIM ARRAY TEST [0,9,2]");
	println("                                               [3,8,9]\n");
	arr_int32[0,0] = 9;
	arr_int32[1,1] = 9;
	arr_int32[2,2] = 9;
	test_case(arr_int32[0, 0], 9, 1);
	test_case(arr_int32[1,1], 9, 2);
	test_case(arr_int32[2,2], 9, 3);
	println("");

}
func run_multiple_dimension_real_array_test() : void
{
	println("                         [4.2, 1.5, 2.3]");
	println("REAL MULT-DIM ARRAY TEST [0.3, 1.1, 3.2]");
	println("                         [3.5, 1.8, 0.4]\n");

	float[,] arr_float = float(3, 3);
	arr_float[0, 0] = 4.2;	arr_float[1, 0] = 0.3;	arr_float[2, 0] = 3.5;
	arr_float[0, 1] = 1.5;	arr_float[1, 1] = 1.1;	arr_float[2, 1] = 1.8;
	arr_float[0, 2] = 2.3;	arr_float[1, 2] = 3.2;	arr_float[2, 2] = 0.4;

	println("GET FROM REAL MULT-DIM ARRAY TEST");
	test_case(arr_float[0, 0], 4.2, 1);
	test_case(arr_float[1, 1], 1.1, 2);
	test_case(arr_float[2, 2], 0.4, 3);
	println("");

	println("                                           [9.1, 1.5, 2.3]");
	println("RESET ELEMENTS OF REAL MULT-DIM ARRAY TEST [0.3, 9.2, 3.2]");
	println("                                           [3.5, 1.8, 9.3]\n");
	arr_float[0, 0] = 9.1;
	arr_float[1, 1] = 9.2;
	arr_float[2, 2] = 9.3;
	test_case(arr_float[0, 0], 9.1, 1);
	test_case(arr_float[1, 1], 9.2, 2);
	test_case(arr_float[2, 2], 9.3, 3);
	println("");

}
func run_multiple_dimension_string_array_test() : void
{
	println("                           [\"qwe\",\"rty\",\"yui\"]");
	println("STRING MULT-DIM ARRAY TEST [\"iop\",\"asd\",\"dff\"]");
	println("                           [\"dfg\",\"fgh\",\"ghj\"]\n");

	string[,] arr_string = string(3, 3);
	arr_string[0, 0] = "qwe";	arr_string[1, 0] = "iop";	arr_string[2, 0] = "dfg";
	arr_string[0, 1] = "rty";	arr_string[1, 1] = "asd";	arr_string[2, 1] = "fgh";
	arr_string[0, 2] = "yui";	arr_string[1, 2] = "dff";	arr_string[2, 2] = "ghj";

	println("GET FROM STRING MULT-DIM ARRAY TEST");
	test_case(arr_string[0, 0], "qwe", 1);
	test_case(arr_string[1, 1], "asd", 2);
	test_case(arr_string[2, 2], "ghj", 3);
	println("");

	println("                                             [\"ewq\",\"rty\",\"yui\"]");
	println("RESET ELEMENTS OF STRING MULT-DIM ARRAY TEST [\"iop\",\"dsa\",\"dff\"]");
	println("                                             [\"dfg\",\"fgh\",\"jhg\"]\n");
	arr_string[0, 0] = "ewq";
	arr_string[1, 1] = "dsa";
	arr_string[2, 2] = "jhg";
	test_case(arr_string[0, 0], "ewq", 1);
	test_case(arr_string[1, 1], "dsa", 2);
	test_case(arr_string[2, 2], "jhg", 3);
	println("");

}
func run_multiple_dimension_boolean_array_test() : void
{
	println("                            [true,false,false]");
	println("BOOLEAN MULT-DIM ARRAY TEST [false,true,true ]");
	println("                            [true,false,true ]\n");

	boolean[,] arr_bool = boolean(3, 3);
	arr_bool[0, 0] = true;	arr_bool[1, 0] = false;	arr_bool[2, 0] = true;
	arr_bool[0, 1] = false;	arr_bool[1, 1] = true;	arr_bool[2, 1] = false;
	arr_bool[0, 2] = false;	arr_bool[1, 2] = true;	arr_bool[2, 2] = true;

	println("GET FROM BOOLEAN MULT-DIM ARRAY TEST");
	test_case(arr_bool[0, 0], true, 1);
	test_case(arr_bool[1, 1], true, 2);
	test_case(arr_bool[2, 2], true, 3);
	println("");

	println("                                              [false,false,false]");
	println("RESET ELEMENTS OF BOOLEAN MULT-DIM ARRAY TEST [false,false,true ]");
	println("                                              [true,false,false ]\n");
	arr_bool[0, 0] = false;
	arr_bool[1, 1] = false;
	arr_bool[2, 2] = false;
	test_case(arr_bool[0, 0], false, 1);
	test_case(arr_bool[1, 1], false, 2);
	test_case(arr_bool[2, 2], false, 3);
	println("");

}

func run_multiple_dimension_array_tests() : void
{
	println("MULT-DIMENSION ARRAY TEST\n");

	run_multiple_dimension_integral_array_test();
	run_multiple_dimension_real_array_test();
	run_multiple_dimension_string_array_test();
	run_multiple_dimension_boolean_array_test();
}
func run_primitive_array_tests() : void
{
	println("PRIMITIVE ARRAY TEST\n");

	run_string_test();
	run_primitive_real_array_test();
	run_primitive_string_array_test();
	run_primitive_boolean_array_test();
	run_primitive_integral_array_test();
}

func run_array_tests() : void
{
	run_primitive_array_tests();
	run_multiple_dimension_array_tests();
}