import array;

/*func BubbleSort(integer[] data) : integer[]
{
	integer i = 0;
	integer j = 0;
	integer buff;

	while (i < len(data))
	{
		j = 0;
		while (j < len(data))
		{

		}

		i += 1;
	}


	return data;
}*/

func SelectionSort(integer[] data) : integer[]
{
	integer i = 0;
	integer j = 0;
	integer buff;

	while (i < len(data))
	{
		j = i + 1;
		while (j < len(data))
		{
			if (data[i] < data[j])
			{
				buff = data[i];
				data[i] = data[j];
				data[j] = buff;
			}
			j += 1;
		}
		i += 1;
	}
	return data;
}

func QuickSort(integer[] data) : integer[]
{
	if (len(data) <= 1)
		return data;

	integer[] greater = integer(len(data));
	integer[] same	  = integer(len(data));
	integer[] lower   = integer(len(data));

	integer greater_size = 0;
	integer same_size    = 0;
	integer lower_size   = 0;

	integer peak = data[len(data) / 2];

	integer i = 0;
	while (i < len(data))
	{
		if (peak < data[i])
		{
			greater[greater_size] = data[i];
			greater_size += 1;
		}
		if (peak > data[i])
		{
			lower[lower_size] = data[i];
			lower_size += 1;
		}
		if (peak == data[i])
		{
			same[same_size] = data[i];
			same_size += 1;
		}
		i += 1;
	}

	greater = SetIntArrayLen(greater, greater_size);
	same  = SetIntArrayLen(same, same_size);
	lower = SetIntArrayLen(lower, lower_size);

	return ConcatIntArrays(QuickSort(lower),same,QuickSort(greater));
}